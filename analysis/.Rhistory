result.sus <- t.test(SUS.df$Score~SUS.df$Conditions)
result.open <- wilcox.test(OPENNESS.df$Score~OPENNESS.df$Conditions)
result.paes <- wilcox.test(PAES.df$Score~PAES.df$Conditions)
result.warmth <- t.test(warmth.df$Score~warmth.df$Conditions)
result.competence <- t.test(competence.df$Score~competence.df$Conditions)
result.discomfort <- wilcox.test(discomfort.df$Score~discomfort.df$Conditions)
result.wai <- t.test(WAI.df$Score~WAI.df$Conditions)
my_comparisons <- list(c("adaptivity","adaptability"))
SCALES <- subset(hri.df, hri.df$Item == "SUS" | hri.df$Item == "Physical Activity Enjoyment" | hri.df$Item == "Cooperation" |hri.df$Item == "Working Alliance Inventory" )
p <- ggboxplot(SCALES, x = "Conditions", y = "Score",
color = "black", palette = palette,fill="Conditions",ggtheme = theme_pubclean(), facet.by = "Item",  panel.labs.font = list( size = 14))+
stat_compare_means(comparisons = my_comparisons, label = "p.signif", method='wilcox.test')
ggpar(p, ylim = c(1,6),
font.x = c(14),
font.y = c(14),
font.main = c(14),
font.legend = c(14),
font.tickslab =c(14), legend ="top")
ggsave(filename="../src/figures/figure-latex/sus.pdf", plot = p)
ROSAS <- subset(hri.df,hri.df$Item == "Warmth" | hri.df$Item == "Discomfort" | hri.df$Item == "Competence")
p<-ggboxplot(na.omit(ROSAS), x = "Conditions", y = "Score",
color = "black", palette = palette,fill="Conditions",ggtheme = theme_pubclean(), panel.labs.font = list( size = 16) ,facet.by = "Item")+
stat_compare_means(comparisons = my_comparisons, label = "p.signif", method='t.test') + theme(axis.text.x = element_text(angle = 10))
ggpar(p,
font.x = c(14),
font.y = c(14),
font.main = c(14),
font.legend = c(14),
font.tickslab =c(14), legend ="none")
ggsave(filename="../src/figures/figure-latex/rosas.pdf", plot = p)
crosstable_result <- chisq.test(countTable, correct = FALSE)
p_chi <- numformat(round(crosstable_result[["p.value"]],digits = 2),2)
stat_chi <- numformat(round(crosstable_result[["statistic"]], digits =2 ),2)
crosstable_result <- chisq.test(countTable, correct = TRUE)
p_chi_corr <- numformat(round(crosstable_result[["p.value"]],digits = 2),2)
stat_corr <- numformat(round(crosstable_result[["statistic"]], digits =2 ),2)
p <- ggplot(data=countTableLong) +
geom_bar(stat="identity", aes(x=Conditions, y=Count, group = Opt, fill=Opt), colour="black") +scale_fill_manual(values=c("#cccccc", "#333333")) + theme_pubclean()
ggpar(p , legend = "top", legend.title = "Opted", xlab = "Conditions",
font.x = c(14),
font.y = c(14),
font.main = c(14),
font.legend = c(14),
font.tickslab =c(14))
library(diagram)
data <- c(0, "'1.15*'", 0,
0, 0, 0,
"'.48*'", "'.8*** (.31)'", 0)
M<- matrix (nrow=3, ncol=3, byrow = TRUE, data=data)
plot<- plotmat (M, pos=c(1,2),
name= c( "Competence","Condition", "Working Alliance"),
box.type = "rect", box.size = 0.15, box.prop=0.1,  curve=.0)
# This script is preprocessing the data of the adaptable condition
# setwd("/home/sebschne/Work/agaitheses.git.thesis-sebschne/results/pl_learning_study/")
setwd("/home/sebschne/Work/archives/ijsr/analysis/")
pref_ground_truth <- read.csv("../raw/pl_study/groundtruth.csv")
boxplot(pref_ground_truth)
view(pref_ground_truth)
iew(pref_ground_truth)
View(pref_ground_truth)
df <- read.csv("https://raw.githubusercontent.com/selva86/datasets/master/gdppercap.csv")
df
melt(pref_ground_truth)
test < - read.csv("test_ranking.csv")
test <- read.csv("test_ranking.csv")
boxplot(test)
test
ggplot(test)
+ geom_segment(aes(x=1,xend=2))
p <- ggplot(test) + geom_segment(aes(x=1, xend=2, y=`1952`, yend=`1957`, col=class), size=.75, show.legend=F) +
geom_vline(xintercept=1, linetype="dashed", size=.1) +
geom_vline(xintercept=2, linetype="dashed", size=.1) +
scale_color_manual(labels = c("Up", "Down"),
values = c("green"="#00ba38", "red"="#f8766d")) +  # color of lines
labs(x="", y="Mean GdpPerCap") +  # Axis labels
xlim(.5, 2.5) + ylim(0,(1.1*(max(df$`1952`, df$`1957`))))
p <- ggplot(test) + geom_segment(aes(x=1, xend=2, y=`1952`, yend=`1957`, col=class), size=.75, show.legend=F) +
geom_vline(xintercept=1, linetype="dashed", size=.1) +
geom_vline(xintercept=2, linetype="dashed", size=.1) +
scale_color_manual(labels = c("Up", "Down"),
values = c("green"="#00ba38", "red"="#f8766d")) +  # color of lines
labs(x="", y="Mean GdpPerCap") +  # Axis labels
xlim(.5, 2.5) + ylim(0,(1.1*(max(df$`1952`, df$`1957`))))
p <- ggplot(test) + geom_segment(aes(x=1, xend=2, y=`1952`, yend=`1957`, col=class), size=.75, show.legend=F) +
geom_vline(xintercept=1, linetype="dashed", size=.1) +
geom_vline(xintercept=2, linetype="dashed", size=.1) +
scale_color_manual(labels = c("Up", "Down"),
values = c("green"="#00ba38", "red"="#f8766d"))
p + theme(panel.background = element_blank(),
panel.grid = element_blank(),
axis.ticks = element_blank(),
axis.text.x = element_blank(),
panel.border = element_blank(),
plot.margin = unit(c(1,2,1,2), "cm"))
p + theme(panel.background = element_blank(),
panel.grid = element_blank(),
axis.ticks = element_blank(),
axis.text.x = element_blank(),
panel.border = element_blank(),
plot.margin = unit(c(1,2,1,2), "cm"))
p <- ggplot(test) + geom_segment(aes(x=1, xend=2, y=`ranked`, yend=`learned`, col=class), size=.75, show.legend=F) +
geom_vline(xintercept=1, linetype="dashed", size=.1) +
geom_vline(xintercept=2, linetype="dashed", size=.1) +
scale_color_manual(labels = c("Up", "Down"),
values = c("green"="#00ba38", "red"="#f8766d"))
p + theme(panel.background = element_blank(),
panel.grid = element_blank(),
axis.ticks = element_blank(),
axis.text.x = element_blank(),
panel.border = element_blank(),
plot.margin = unit(c(1,2,1,2), "cm"))
p <- ggplot(test) + geom_segment(aes(x=1, xend=2, y=`ranked`, yend=`learned`, col=class), size=.75, show.legend=F) +
geom_vline(xintercept=1, linetype="dashed", size=.1) +
geom_vline(xintercept=2, linetype="dashed", size=.1)
p <- ggplot(test) + geom_segment(aes(x=1, xend=2, y=`ranked`, yend=`learned`, col=class), size=.75, show.legend=F) +
geom_vline(xintercept=1, linetype="dashed", size=.1) +
geom_vline(xintercept=2, linetype="dashed", size=.1)
p + theme(panel.background = element_blank(),
panel.grid = element_blank(),
axis.ticks = element_blank(),
axis.text.x = element_blank(),
panel.border = element_blank(),
plot.margin = unit(c(1,2,1,2), "cm"))
p + theme(panel.background = element_blank())
p <- ggplot(test) + geom_segment(aes(x=1, xend=2, y=`ranked`, yend=`learned`, col=class), size=.75, show.legend=F)
p + theme(panel.background = element_blank())
p <- ggplot(test) + geom_segment(aes(x=1, xend=2, y=`ranked`, yend=`learned`), size=.75, show.legend=F)
p + theme(panel.background = element_blank())
p <- ggplot(test) + geom_segment(aes(x=1, xend=2, y=`ranked`, yend=`learned`, col = 'id'), size=.75, show.legend=F)
p + theme(panel.background = element_blank())
p <- ggplot(test) + geom_segment(aes(x=1, xend=2, y=`ranked`, yend=`learned`, col = 'category'), size=.75, show.legend=F)
p + theme(panel.background = element_blank())
p <- ggplot(test) + geom_segment(aes(x=1, xend=2, y=`ranked`, yend=`learned`), size=.75, show.legend=F)
p + theme(panel.background = element_blank())
ggdotchart(test, x = 'id' , y ='learned')
ggdotchart(test, x = 'ranked' , y ='learned')
ggdotchart(test, x = 'category' , y ='learned')
ggdotchart(test, x = 'ranked' , y ='learned', fill = 'id')
test <- read.csv("test_ranking.csv")
plot(test,x=learner,score)
ggplot(test,x=learner,score)
ggplot(test,x=learner,y=score)
ggboxplot(test,x=learner,y=score)
ggdotplot(test,learner,score)
ggdotplot(test,'learner','score')
ggdotplot(test,'learner','score', color = category)
ggdotplot(test,'learner','score', color = 'category')
ggline(test,'learner','score', color = 'category')
ggline(test,'learner','score', color = 'category', facet.by = 'id')
ggline(test,'learner','score', color = 'category')
ggscatter(test,'learner','score', color = 'category')
gghistogram(test,'learner','score', color = 'category')
ggballoonplot(test,'learner','score', color = 'category')
ggline(test,'learner','score', color = 'category')
ggdonutchart(test,'learner','score', color = 'category')
ggpar(test,'learner','score', color = 'category')
ggscatterhist(test,'learner','score', color = 'category')
ggtexttable(test,'learner','score', color = 'category')
ggpaired(test,'learnered','ranked','score', color = 'category')
ggpaired(test,'learned','ranked','score', color = 'category')
ggpaired(test,'learned','ranked','score', color = 'category')
ggpaired(test,'ranked','learned','score', color = 'category')
ggbarplot(test,'ranked','learned','score', color = 'category')
ggbarplot(test,'learner','score', color = 'category')
ggbarplot(test,'learner','category', color = 'score')
ggbarplot(test,'learner','category', color = 'score', facet.by = 'id')
ggbarplot(test,'learner','category', color = 'category', facet.by = 'id')
ggbarplot(test,'learner','category', color = 'score', facet.by = 'id')
ggbarplot(test,'learner','scre', color = 'category', facet.by = 'id')
ggbarplot(test,'learner','score', color = 'category', facet.by = 'id')
ggplot(test,'learner','score', color = 'category', facet.by = 'id')
ggscatterplot(test,'learner','score', color = 'category', facet.by = 'id')
ggscatter(test,'learner','score', color = 'category', facet.by = 'id')
ggscatter(test,'learner','score', color = 'category')
ggscatter(test,'learner','score', color = 'category', facet.by = 'id')
ggplot(data = test, aes(x = id, y = score)) +
stat_bin_2d(aes(fill = ..count..),
binwidth = c(5,15),
colour = 'green',
size = 1.05)
ggplot(data = test, aes(x = id, y = category)) +
stat_bin_2d(aes(fill = ..count..),
binwidth = c(5,15),
colour = 'green',
size = 1.05)
ggplot(data = test, aes(x = id, y = category)) +
stat_bin_2d(aes(fill = learner),
binwidth = c(5,15),
colour = 'green',
size = 1.05)
ggplot(data = test, aes(x = learner, y = category)) +
stat_bin_2d(aes(fill = id),
binwidth = c(5,15),
colour = 'green',
size = 1.05)
ggplot(data = test, aes(x = learner, y = category)) +
stat_bin_2d(aes(fill = learner),
binwidth = c(5,15),
colour = 'green',
size = 1.05)
ggplot(data = test, aes(x = learner, y = category)) +
stat_bin_2d(aes(fill = category),
binwidth = c(5,15),
colour = 'green',
size = 1.05)
ggplot(data = test, aes(x = learner, y = id)) +
stat_bin_2d(aes(fill = category),
binwidth = c(5,15),
colour = 'green',
size = 1.05)
ggplot(data = test, aes(x = learner, y = score)) +
stat_bin_2d(aes(fill = category),
binwidth = c(5,15),
colour = 'green',
size = 1.05)
ggplot(data = test, aes(x = learner, y = score)) +
stat_bin_2d(aes(fill = score),
binwidth = c(5,15),
colour = 'green',
size = 1.05)
ggplot(data = test, aes(x = learner, y = category)) +
stat_bin_2d(aes(fill = score),
binwidth = c(5,15),
colour = 'green',
size = 1.05)
ggplot(data = test, aes(x = category, y = learner)) +
stat_bin_2d(aes(fill = score),
binwidth = c(5,15),
colour = 'green',
size = 1.05)
ggplot(data = test, aes(x = category, y = learner)) +
stat_bin_2d(aes(fill = ..score.. ),
binwidth = c(5,15),
colour = 'green',
size = 1.05)
ggplot(data = test, aes(x = category, y = learner)) +
stat_bin_2d(aes(fill = ..score. ),
binwidth = c(5,15),
colour = 'green',
size = 1.05)
ggplot(data = test, aes(x = category, y = learner)) +
stat_bin_2d(aes(fill = ..score.. ),
binwidth = c(5,15),
colour = 'green',
size = 1.05)
ggplot(data = test, aes(x = category, y = id)) +
stat_bin_2d(aes(fill = ..score.. ),
binwidth = c(5,15),
colour = 'green',
size = 1.05)
ggplot(data = test, aes(x = category, y = id)) +
stat_bin_2d(aes(fill = score ),
binwidth = c(5,15),
colour = 'green',
size = 1.05)
mosaicplot(test)
mosaicplot?
?mosaicplot
?mosaicplot
mosaicplot(test, test$id~test$learner)
mosaicplot(test, id~learner)
mosaicplot(test, id~score)
?mosaicplot
ggplot(test, aes(id, score)) + geom_tile(aes(fill = category),
+     colour = "white") + scale_fill_gradient(low = "white",
+     high = "steelblue"))
ggplot(test, aes(id, score)) + geom_tile(aes(fill = category),
+     colour = "white") + scale_fill_gradient(low = "white",
+     high = "steelblue")
ggplot(test, aes(id, score)) + geom_tile(aes(fill = category),
+     colour = "white") + scale_fill_gradient(low = "white",
+     high = "steelblue")
ggplot(test, aes(id, score)) + geom_tile(aes(fill = category),
+     colour = "white")
ggplot(test, aes(id, score)) + geom_tile(aes(fill = category),
+     colour = "white") + scale_fill_gradient(low = "white",
+     high = "steelblue"))
ggplot(test, aes(id, score)) + geom_tile(aes(fill = category),
+     colour = "white") + scale_fill_gradient(low = "white",
+     high = "steelblue"))
ggplot(test, aes(id, score)) + geom_tile(aes(fill = category),
+     colour = "white") + scale_fill_gradient(low = "white",
+     high = "steelblue")))
(p <- ggplot(test, aes(id, score)) + geom_tile(aes(fill = category),
+     colour = "white") + scale_fill_gradient(low = "white",
+     high = "steelblue"))
p <- ggplot(test, aes(id, score)) + geom_tile(aes(fill = category))
ggplot(test, aes(id, score)) + geom_tile(aes(fill = category))
ggplot(test, aes(score, id)) + geom_tile(aes(fill = category))
ggplot(test, aes(score, id)) + geom_tile(aes(fill = category)),
+     colour = "white") + scale_fill_gradient(low = "white",
+     high = "steelblue")
ggplot(test, aes(score, id)) + geom_tile(aes(fill = category))
ggplot(test, aes(score, id)) + geom_tile(aes(fill = category)) +     colour = "white") + scale_fill_gradient(low = "white", high = "steelblue")
ggplot(test, aes(score, id)) + geom_tile(aes(fill = category)), colour = "white"),  scale_fill_gradient(low = "white", high = "steelblue")
ggplot(test, aes(score, id)) + geom_tile(aes(fill = category), colour = "white"),  scale_fill_gradient(low = "white", high = "steelblue"))
ggplot(test, aes(score, id)) + geom_tile(aes(fill = category), colour = "white"),  scale_fill_gradient(low = "white", high = "steelblue")
ggplot(test, aes(score, id)) + geom_tile(aes(fill = category), colour = "white",scale_fill_gradient(low = "white", high = "steelblue"))
ggplot(test, aes(score, id)) + geom_tile(aes(fill = category), colour = "white",scale_fill_gradient(low = "white", high = "steelblue")
ggplot(test, aes(score, id)) + geom_tile(aes(fill = category), colour = "white",scale_fill_gradient(low = "white", high = "steelblue"))
ggplot(test, aes(score, id)) + geom_tile(aes(fill = category), scale_fill_gradient(low = "white", high = "steelblue"))
ggplot(test, aes(score, id)) + geom_tile(aes(fill = category))
ggplot(test, aes(score, id, category)) + geom_tile(aes(fill = category))
ggplot(test, aes(score, id, category)) + geom_tile(aes(fill = score))
ggplot(test, aes(score, id, category)) + geom_tile(aes(fill = id))
ggplot(test, aes(score, id, category)) + geom_tile(aes(fill = learner))
ggplot(test, aes(category, id, score)) + geom_tile(aes(fill = learner))
test <- read.csv("test_ranking.csv")
ggplot(test, aes(category, id, score)) + geom_tile(aes(fill = learner))
ggplot(test, aes(score, id, score)) + geom_tile(aes(fill = learner))
ggplot(test, aes(score, learner)) + geom_tile(aes(fill = learner))
ggplot(test, aes(score, learner)) + geom_tile(aes(fill = score))
ggplot(test, aes(category, learner)) + geom_tile(aes(fill = score))
test <- read.csv("test_ranking.csv")
ggplot(test, aes(category, learner)) + geom_tile(aes(fill = score))
p <- ggplot(test, aes(category, learner)) + geom_tile(aes(fill = score))
p + facet_wrap(~id)
p + facet_wrap(~id, nrow = 2)
p + facet_wrap(~id, ncol = 2)
p + facet_wrap(~id, ncol = 1)
p <- ggplot(test, aes(score, learner)) + geom_tile(aes(fill = category))
p + facet_wrap(~id)
p + facet_wrap(~id, ncol =1)
p + facet_wrap(category~id)
p + facet_wrap(~id, ncol =1)
p + facet_wrap(id~, ncol =1)
p + facet_wrap(id, ncol =1)
p + facet_wrap(~id, ncol =1)
p + facet_wrap(~id ., ncol =1)
p + facet_grid(~id , ncol =1)
p + facet_grid(~id )
p + facet_grid(~id .)
p + facet_grid(id~ )
p + facet_grid(id)
p + facet_grid(~id)
p + facet_grid(~id+score)
p + facet_grid(~id)
test <- read.csv("test_ranking.csv")
p <- ggplot(test, aes(score, learner)) + geom_tile(aes(fill = category))
p + facet_wrap(~id, ncol =1)
test <- read.csv("test_ranking.csv")
p <- ggplot(test, aes(score, learner)) + geom_tile(aes(fill = category))
p + facet_wrap(~id, ncol =2)
test <- read.csv("melted_ranking.csv")
p <- ggplot(test, aes(score, learner)) + geom_tile(aes(fill = category))
p + facet_wrap(~id, ncol =2)
test <- read.csv("melted_ranking.csv")
p <- ggplot(test, aes(score, learner)) + geom_tile(aes(fill = category))
p + facet_wrap(~id, ncol =2)
p + facet_wrap(~id, ncol =10, nrow = 2)
p + theme(panel.spacing = unit(1))
p + theme(panel.spacing = unit(1, "lines"))
p + theme(panel.spacing = unit(2, "lines"))
p + theme(panel.spacing = unit(3, "lines"))
p + facet_wrap(~id, ncol = 10, nrow=2)
p + theme(panel.spacing = unit(1, 'lines')
p + theme(panel.spacing = unit(1, 'lines'))
p <- ggplot(test, aes(score, learner)) + geom_tile(aes(fill = category))
p + theme(panel.spacing = unit(1, 'lines'))
p + facet_wrap(~id, ncol = 10, nrow=2)
p + theme(panel.spacing = unit(1, 'lines'))
p + theme(panel.spacing = unit(1, 'lines')) + face_wrap(~id)
p + theme(panel.spacing = unit(1, 'lines')) + facet_wrap(~id)
p + theme(panel.spacing = unit(2, 'lines')) + facet_wrap(~id)
p + theme(panel.spacing = unit(0, 'lines')) + facet_wrap(~id)
p + theme(panel.spacing = unit(0, 'lines')) + facet_wrap(~id) + theme_grey()
p + theme(panel.spacing = unit(0, 'lines')) + facet_wrap(~id) + theme_grey(base_size = 8)
library(RColorBrewer)
scale_fill_manual(values=rev(brewer.pal(7,"YlGnBu")),na.value="grey90")+
scale_fill_manual(values=rev(brewer.pal(7,"YlGnBu")),na.value="grey90")
p <- ggplot(test, aes(score, learner)) + geom_tile()
p + theme(panel.spacing = unit(0, 'lines')) + facet_wrap(~id)
p <- ggplot(test, aes(score, learner)) + geom_tile(aes(fill = category),colour="white",size=0.25)
p + theme(panel.spacing = unit(0, 'lines')) + facet_wrap(~id)
p + theme(panel.spacing = unit(0, 'lines')) + facet_wrap(~id)+
#remove extra space
scale_y_discrete(expand=c(0,0))+
p + theme(panel.spacing = unit(0, 'lines')) + facet_wrap(~id) + scale_y_discrete(expand=c(0,0))+
p + theme(panel.spacing = unit(0, 'lines')) + facet_wrap(~id) + scale_y_discrete(expand=c(0,0))
p <- ggplot(test, aes(score, learner)) + geom_tile(aes(fill = category),colour="white",size=0.25) + scale_y_discrete(expand=c(0,0))
p + theme(panel.spacing = unit(0, 'lines')) + facet_wrap(~id)
p + theme(panel.spacing = unit(0, 'lines')) + facet_wrap(~id)
p <- ggplot(test, aes(score, learner)) + geom_tile(aes(fill = category),colour="white",size=0.25) + scale_y_discrete(expand=c(0,0)) + scale_fill_manual(values=c("#d53e4f","#f46d43","#fdae61",
"#fee08b","#e6f598","#abdda4","#ddf1da"))
p + theme(panel.spacing = unit(0, 'lines')) + facet_wrap(~id)
p + theme(panel.spacing = unit(0, 'lines')) + facet_wrap(~id)
p <- ggplot(test, aes(score, learner)) + geom_tile(aes(fill = category),colour="white",size=0.25)
p + theme(panel.spacing = unit(0, 'lines')) + facet_wrap(~id)
+ scale_fill_manual(values=rev(brewer.pal(5,"YlGnBu")))
brewer.pal()
?brewer.pal
p <- ggplot(test, aes(score, learner)) + geom_tile(aes(fill = category),colour="white",size=0.25)
p + theme(panel.spacing = unit(0, 'lines')) + facet_wrap(~id)
p + theme(panel.spacing = unit(0, 'lines')) + facet_wrap(~id)
+ scale_fill_manual(values=rev(brewer.pal(5,"Dark2")))
p <- ggplot(test, aes(score, learner)) + geom_tile(aes(fill = category),colour="white",size=0.25)
+ scale_y_discrete(expand=c(0,0))
+ scale_fill_manual(values=rev(brewer.pal(5,"Dark2")))
p + theme(panel.spacing = unit(0, 'lines')) + facet_wrap(~id)
p <- ggplot(test, aes(score, learner)) + geom_tile(aes(fill = category),colour="white",size=0.25) + scale_y_discrete(expand=c(0,0))  + scale_fill_manual(values=rev(brewer.pal(5,"Dark2")))
p + theme(panel.spacing = unit(0, 'lines')) + facet_wrap(~id)
?brewer
p <- ggplot(test, aes(score, learner)) + geom_tile(aes(fill = category),colour="white",size=0.25) + scale_y_discrete(expand=c(0,0))  + scale_fill_manual(values=rev(brewer.pal(5,"BrBG")))
p + theme(panel.spacing = unit(0, 'lines')) + facet_wrap(~id)
p <- ggplot(test, aes(score, learner)) + geom_tile(aes(fill = category),colour="white",size=0.25) + scale_y_discrete(expand=c(0,0))  + scale_fill_manual(values=rev(brewer.pal(5,"RdYlGn")))
p + theme(panel.spacing = unit(0, 'lines')) + facet_wrap(~id)
display.brewer.pal(5, RdYlGn)
display.brewer.pal(5, "RdYlGn")
display.brewer.pal(5, "Pastel2")
Dark2
display.brewer.pal(5, "Dark2")
display.brewer.pal(5, "Accent")
display.brewer.pal(5, "Set2")
display.brewer.pal(5, "Pastel1")
p <- ggplot(test, aes(score, learner)) + geom_tile(aes(fill = category),colour="white",size=0.25) + scale_y_discrete(expand=c(0,0))  + scale_fill_manual(values=rev(brewer.pal(5,"Pastel1")))
p + theme(panel.spacing = unit(0, 'lines')) + facet_wrap(~id)
p <- ggplot(test, aes(score, learner)) + geom_tile(aes(fill = category),colour="white",size=0.25) + scale_y_discrete(expand=c(0,0))   + scale_fill_manual(values=rev(brewer.pal(5,"Pastel1")))
p <- ggplot(test, aes(score, learner)) + geom_tile(aes(fill = category),colour="white",size=0.25) + scale_y_discrete(expand=c(0,0)) + scale_x_discrete(expand=c(0,0))  + scale_fill_manual(values=rev(brewer.pal(5,"Pastel1")))
p + theme(panel.spacing = unit(0, 'lines')) + facet_wrap(~id)
p <- ggplot(test, aes(score, learner)) + geom_tile(aes(fill = category),colour="white",size=0.25) + scale_y_discrete(expand=c(0,0)) + scale_x_discrete(expand=c(0.1,0))  + scale_fill_manual(values=rev(brewer.pal(5,"Pastel1")))
p + theme(panel.spacing = unit(0, 'lines')) + facet_wrap(~id)
p <- ggplot(test, aes(score, learner)) + geom_tile(aes(fill = category),colour="white",size=0.25) + scale_y_discrete(expand=c(0,0)) + scale_x_discrete(expand=c(0.01,0))  + scale_fill_manual(values=rev(brewer.pal(5,"Pastel1")))
p + theme(panel.spacing = unit(0, 'lines')) + facet_wrap(~id)
p <- ggplot(test, aes(score, learner)) + geom_tile(aes(fill = category),
colour="white",size=0.25) +
scale_y_discrete(expand=c(0,0)) + scale_x_discrete(expand=c(0.01,0))  +
scale_fill_manual(values=rev(brewer.pal(5,"Pastel1")))
p + theme(panel.spacing = unit(0, 'lines')) + facet_wrap(~id)
p <- ggplot(test, aes(score, learner)) + geom_tile(aes(fill = category),
colour="white",size=0.25) +
scale_y_discrete(expand=c(0,0)) + scale_x_discrete(expand=c(0.05,0))  +
scale_fill_manual(values=rev(brewer.pal(5,"Pastel1")))
p + theme(panel.spacing = unit(0, 'lines')) + facet_wrap(~id)
p <- ggplot(test, aes(score, learner)) + geom_tile(aes(fill = category),
colour="white",size=0.25) +
scale_y_discrete(expand=c(0,0)) + scale_x_discrete(expand=c(0.03,0))  +
scale_fill_manual(values=rev(brewer.pal(5,"Pastel1")))
p + theme(panel.spacing = unit(0, 'lines')) + facet_wrap(~id)
p <- ggplot(test, aes(score, learner)) + geom_tile(aes(fill = category),
colour="white",size=0.25) +
scale_y_discrete(expand=c(0.1,0)) + scale_x_discrete(expand=c(0.03,0))  +
scale_fill_manual(values=rev(brewer.pal(5,"Pastel1")))
p + theme(panel.spacing = unit(0, 'lines')) + facet_wrap(~id)
p <- ggplot(test, aes(score, learner)) + geom_tile(aes(fill = category),
colour="white",size=0.25) +
scale_y_discrete(expand=c(0.1,0.1)) + scale_x_discrete(expand=c(0.03,0))  +
scale_fill_manual(values=rev(brewer.pal(5,"Pastel1")))
p + theme(panel.spacing = unit(0, 'lines')) + facet_wrap(~id)
p <- ggplot(test, aes(score, learner)) + geom_tile(aes(fill = category),
colour="white",size=0.25) +
# scale_y_discrete(expand=c(0.1,0.1)) +
# scale_x_discrete(expand=c(0.03,0))  +
scale_fill_manual(values=rev(brewer.pal(5,"Pastel1")))
p + theme(panel.spacing = unit(0, 'lines')) + facet_wrap(~id)
p <- ggplot(test, aes(score, learner)) + geom_tile(aes(fill = category),
colour="white",size=0.25) +
# scale_y_discrete(expand=c(0.1,0.1)) +
scale_x_discrete(expand=c(0.03,0))  +
scale_fill_manual(values=rev(brewer.pal(5,"Pastel1")))
p + theme(panel.spacing = unit(0, 'lines')) + facet_wrap(~id)
p <- ggplot(test, aes(score, learner)) + geom_tile(aes(fill = category),
colour="white",size=0.25) +
# scale_y_discrete(expand=c(0.1,0.1)) +
scale_x_discrete(expand=c(0.03,1.0))  +
scale_fill_manual(values=rev(brewer.pal(5,"Pastel1")))
p + theme(panel.spacing = unit(0, 'lines')) + facet_wrap(~id)
p <- ggplot(test, aes(score, learner)) + geom_tile(aes(fill = category),
colour="white",size=0.25) +
# scale_y_discrete(expand=c(0.1,0.1)) +
scale_x_discrete(expand=c(0.03,0.0))  +
scale_fill_manual(values=rev(brewer.pal(5,"Pastel1")))
p <- ggplot(test, aes(score, learner)) + geom_tile(aes(fill = category),
colour="white",size=0.25) +
# scale_y_discrete(expand=c(0.1,0.1)) +
# scale_x_discrete(expand=c(0.03,0.0))  +
scale_fill_manual(values=rev(brewer.pal(5,"Pastel1")))
p + theme(panel.spacing = unit(0, 'lines')) + facet_wrap(~id)
p <- ggplot(test, aes(score, learner)) + geom_tile(aes(fill = category),
colour="white",size=0.25) +
scale_y_discrete(expand=c(0.1,0.1)) +
# scale_x_discrete(expand=c(0.03,0.0))  +
scale_fill_manual(values=rev(brewer.pal(5,"Pastel1")))
p + theme(panel.spacing = unit(0, 'lines')) + facet_wrap(~id)
p + theme(panel.spacing = unit(0, 'lines')) + facet_wrap(id~.)
p + theme(panel.spacing = unit(0, 'lines')) + facet_wrap(~id)
p + theme(panel.spacing = unit(0, 'lines')) + facet_wrap(id~.)
p + theme(panel.spacing = unit(0, 'lines')) + facet_wrap(id~.)
p + theme(panel.spacing = unit(0, 'lines')) + facet_grid(id~.)
p <- ggplot(test, aes(score, learner)) + geom_tile(aes(fill = category),
colour="white",size=0.25) +
# scale_y_discrete(expand=c(0.1,0.1)) +
# scale_x_discrete(expand=c(0.03,0.0))  +
scale_fill_manual(values=rev(brewer.pal(5,"Pastel1")))
p + theme(panel.spacing = unit(0, 'lines')) + facet_grid(id~.)
test <- read.csv("melted_ranking.csv")
p <- ggplot(test, aes(score, learner)) + geom_tile(aes(fill = category),
colour="white",size=0.25) +
# scale_y_discrete(expand=c(0.1,0.1)) +
# scale_x_discrete(expand=c(0.03,0.0))  +
scale_fill_manual(values=rev(brewer.pal(5,"Pastel1")))
p <- ggplot(test, aes(score, learner)) + geom_tile(aes(fill = category),
colour="white",size=0.15) +
# scale_y_discrete(expand=c(0.1,0.1)) +
# scale_x_discrete(expand=c(0.03,0.0))  +
scale_fill_manual(values=rev(brewer.pal(5,"Pastel1")))
p + theme(panel.spacing = unit(0, 'lines')) + facet_wrap(id~.)
p + theme(panel.spacing = unit(0, 'lines')) + facet_wrap(id~.) + ggpar(legend = top, xlab = 'ranking',ylab = '')
ggpar(p, legend = top, xlab = 'ranking',ylab = '')
ggpar(p, legend = "top", xlab = 'ranking',ylab = '')
ggpar(p, legend = "top")
p <- p + theme(panel.spacing = unit(0, 'lines')) + facet_wrap(id~.)
ggpar(p, legend = "top", xlab = 'ranking',ylab = '')
